// Problem Link - https://www.lintcode.com/problem/516/

#include <bits/stdc++.h>
 
using namespace std;
 typedef long long int ll;
 
void fastIO(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
}
 
int main(){
    fastIO();

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
 
    
   
        ll n,k;
        cin>>n>>k;
       ll costs[n][k];
       for(ll i=0;i<n;i++){
        for(ll j=0;j<k;j++){
            cin>>costs[i][j];
        }
       }
       int dp[n+1][k+1];
        int min1=INT_MAX,min2=INT_MAX;
        int mid1,mid2;
        for(int j=0;j<k;j++){
            if(costs[0][j]<min1){
                min1=costs[0][j];
                mid1=j;
            }
            dp[0][j]=costs[0][j];
        }
        for(int j=0;j<k;j++){
            if(mid1==j)continue;
            if(costs[0][j]<min2){min2=costs[0][j];mid2=j;}
        }
        for(int i=1;i<n;i++){
            for(int j=0;j<k;j++){
                if(dp[i-1][j]==min1){
                    dp[i][j]=costs[i][j]+min2;
                }
                else dp[i][j]=costs[i][j]+min1;
                
            }
            min1=INT_MAX;
            min2=INT_MAX;
            for(int j=0;j<k;j++){
                if(dp[i][j]<min1){
                    min1=dp[i][j];
                    mid1=j;
                }
            }
            for(int j=0;j<k;j++){
                if(mid1==j)continue;
                if(dp[i][j]<min2){min2=dp[i][j];mid2=j;}
            }
        }
        int ans=INT_MAX;
        for(int j=0;j<k;j++){
            if(dp[n-1][j]<ans)ans=dp[n-1][j];
        }
        for(ll i=0;i<n;i++){
            for(ll j=0;j<k;j++){
                cout<<dp[i][j]<<" ";
            }
            cout<<"\n";
        }
        cout<<ans;

          
       
    
       
    return 0;
        
}

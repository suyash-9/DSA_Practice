// CPP program to find maximum product of
// a subset.
#include <bits/stdc++.h>
using namespace std;

int maxProductSubset(int a[], int n)
{
	if(n==1)return a[0];
	sort(a,a+n);
    int negs=0,pos=0;
    for(int i=0;i<n;i++){
        if(a[i]>0)pos++;
        if(a[i]<0)negs++;
    }
	int negsmul=1;
	int posmul=1;
	if(negs==0 && pos==0)return 0;
	if(negs&1==1){
	    if(negs>1){
	        for(int i=0;i<negs-1;i++) negsmul*=a[i];
	    }
	    else negsmul=0;
	}
	else{
	    for(int i=0;i<negs;i++) negsmul*=a[i];
	}
	if(pos>0){
	    for(int i=pos;i<n;i++){
	        posmul*=a[i];
	    }
	    return posmul*negsmul;
	}
	else{
	    return negsmul;
	}
}

// Driver Code
int main()
{
	int a[] = { 0,0,0 };
	int n = sizeof(a) / sizeof(a[0]);
	cout << maxProductSubset(a, n);

	
	return 0;
}

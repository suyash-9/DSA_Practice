#include <bits/stdc++.h>
using namespace std;
#define int long long

void dfs(int node, int parent, int src, vector<vector<pair<int, int>>> &adj, vector<vector<int>> &rel)
{
    for (auto x : adj[node])
    {
        int child = x.first;
        int r = x.second;
        if (child != parent)
        {
            rel[src][child] = min(rel[src][node], r);
            dfs(child, node, src, adj, rel);
        }
    }
}

int32_t main()
{

    freopen("mootube.in", "r", stdin);
    freopen("mootube.out", "w", stdout);

    int n, q;
    cin >> n >> q;
    vector<vector<pair<int, int>>> adj(n + 1);
    for (int i = 0; i < n - 1; i++)
    {
        int x, y, r;
        cin >> x >> y >> r;
        adj[x].push_back({y, r});
        adj[y].push_back({x, r});
    }
    vector<vector<int>> rel(n + 1, vector<int>(n + 1, INT_MAX));
    for (int i = 1; i <= n; i++)
    {
        dfs(i, 0, i, adj, rel);
    }
    // for(auto x:rel[1])cout<<x<<" ";
    // cout<<endl;
    while (q--)
    {
        int k, v;
        cin >> k >> v;

        int ans = 0;
        for (int i = 1; i <= n; i++)
        {
            if (i == v)
                continue;
            if (rel[v][i] >= k)
                ans++;
        }
        cout << ans << "\n";
    }
    return 0;
}

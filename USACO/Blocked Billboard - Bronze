#include <bits/stdc++.h>
using namespace std;
#define int long long

struct point{
    int x,y;
    point(int a,int b){
        x = a;
        y = b;
    }
};

struct rectangle{   

    point* up_l;
    point* up_r;
    point* low_l;
    point* low_r;
    rectangle(point* p1, point* p2, point* p3, point* p4){
        up_l = p1;
        up_r = p2;
        low_l = p3;
        low_r = p4;
    }
};

int32_t main()
{
    // #ifndef ONLINE_JUDGE
    //     freopen("input.txt", "r", stdin);
    //     freopen("output.txt", "w", stdout);
    // #endif
#ifndef ONLINE_JUDGE
    freopen("billboard.in", "r", stdin);
    freopen("billboard.out", "w", stdout);
#endif

    int b1_x1 , b1_y1 ,b1_x2 , b1_y2;
    cin>>b1_x1 >> b1_y1 >> b1_x2 >> b1_y2;
    int b2_x1 , b2_y1 ,b2_x2 , b2_y2;
    cin>> b2_x1 >> b2_y1 >> b2_x2 >> b2_y2;
    int t_x1 , t_y1 ,t_x2 , t_y2;
    cin>>t_x1 >> t_y1 >> t_x2 >> t_y2;

    rectangle r1(new point(b1_x1,b1_y2),new point(b1_x2,b1_y2),new point(b1_x1,b1_y1),new point(b1_x2,b1_y1));
    rectangle r2(new point(b2_x1,b2_y2),new point(b2_x2,b2_y2),new point(b2_x1,b2_y1),new point(b2_x2,b2_y1));
    rectangle r3(new point(t_x1,t_y2),new point(t_x2,t_y2),new point(t_x1,t_y1),new point(t_x2,t_y1));

    int area_r1 = (( abs(b1_x1 - b1_x2 ) )*( abs( b1_y1 - b1_y2 )));
    int area_r2 = (( abs(b2_x1 - b2_x2 ) )*( abs( b2_y1 - b2_y2 )));

    //intersection bet r1 and t i.e. r3
    int intersection_length = max( (min( r1.low_r->x , r3.low_r->x) - max(r1.low_l->x , r3.low_l->x)) ,0LL);
    int intersection_width = max( (min( r1.up_r->y , r3.up_r->y) - max(r1.low_r->y , r3.low_r->y)) ,0LL);

    area_r1 -= (intersection_length*intersection_width);

    //intersection bet r2 and t i.e. r3
    intersection_length = max( (min( r2.low_r->x , r3.low_r->x) - max(r2.low_l->x , r3.low_l->x)) ,0LL);
    intersection_width = max( (min( r2.up_r->y , r3.up_r->y) - max(r2.low_r->y , r3.low_r->y)) ,0LL);

    area_r2 -= (intersection_length*intersection_width);

    cout << area_r1 + area_r2;
    return 0;
}
